<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<style>
    .a {
        background-color: black !important;
    }
</style>
<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="mb-6">
            <a href="/orders" class="inline-flex items-center text-gray-600 hover:text-gray-900">
                <i class="fas fa-arrow-left mr-2"></i> Back to Orders
            </a>
        </div>
        
        <div class="bg-white shadow-lg rounded-lg overflow-hidden">
            <!-- Header -->
            <div class="bg-gradient-to-r from-blue-600 to-blue-800 p-6">
                <div class="flex flex-col md:flex-row justify-between items-start md:items-center">
                    <h2 class="text-2xl font-bold text-white mb-4 md:mb-0">Order Details</h2>
                    <div class="space-y-2 md:space-y-0 md:space-x-4">
                        <span class="inline-block px-4 py-2 rounded-full bg-white bg-opacity-20 text-white">
                            Order ID: <%= order._id %>
                        </span>
                        <span class="inline-block px-4 py-2 rounded-full bg-white bg-opacity-20 text-white">
                            <%= new Date(order.createdAt).toLocaleDateString() %>
                        </span>
                    </div>
                </div>
            </div>

            <div class="p-6">
                <!-- Products Section -->
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <div class="lg:col-span-2">
                        <h3 class="text-xl font-semibold mb-4">Products</h3>
                        <div class="space-y-6">
                            <% order.products.forEach(item => { %>
                                <div class="flex items-start p-4 bg-gray-50 rounded-lg hover:shadow-md transition-shadow">
                                    <img src="<%= item.product.productImages[0] %>" 
                                         alt="<%= item.product.name %>" 
                                         class="w-24 h-24 rounded-lg object-cover">
                                    <div class="ml-4 flex-grow">
                                        <h4 class="text-lg font-medium"><%= item.product.name %></h4>
                                        <div class="mt-2 text-gray-600">
                                            <p>₹<%= item.price.toFixed(2) %> × <%= item.quantity %></p>
                                            <p class="font-semibold text-gray-900 mt-1">
                                                Total: ₹<%= (item.price * item.quantity).toFixed(2) %>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>

                    <!-- Order Summary -->
                    <div>
                        <h3 class="text-xl font-semibold mb-4">Order Summary</h3>
                        <div class="bg-gray-50 p-6 rounded-lg">
                            <div class="space-y-3">
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Subtotal</span>
                                    <span>₹<%= (order.totalAmount + order.discount).toFixed(2) %></span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Discount</span>
                                    <span class="text-green-600">-₹<%= order.discount.toFixed(2) %></span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Shipping</span>
                                    <span>₹40.00</span>
                                </div>
                                <div class="pt-3 border-t">
                                    <div class="flex justify-between items-center">
                                        <span class="text-lg font-semibold">Total</span>
                                        <span class="text-lg font-bold">₹<%= order.totalAmount %></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Shipping and Status -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mt-8">
                    <div>
                        <h3 class="text-xl font-semibold mb-4">Shipping Address</h3>
                        <div class="bg-gray-50 p-6 rounded-lg">
                            <p class="font-medium"><%= order.shippingAddress.addressType %> Address</p>
                            <p class="mt-2 text-gray-600">
                                <%= order.shippingAddress.city %>, 
                                <%= order.shippingAddress.state %> - 
                                <%= order.shippingAddress.pin_code %>
                            </p>
                            <p class="mt-2 text-gray-600">
                                Landmark: <%= order.shippingAddress.landmark %>
                            </p>
                            <% if (order.shippingAddress.alternative_no) { %>
                                <p class="mt-2 text-gray-600">
                                    Alt. Phone: <%= order.shippingAddress.alternative_no %>
                                </p>
                            <% } %>
                        </div>
                    </div>

                    <div>
                        <h3 class="text-xl font-semibold mb-4">Order Status</h3>
                        <div class="bg-gray-50 p-6 rounded-lg">
                            <div class="inline-block px-4 py-2 rounded-full <%= 
                                order.orderStatus === 'pending' ? 'bg-yellow-100 text-yellow-800' : 
                                order.orderStatus === 'processing' ? 'bg-blue-100 text-blue-800' : 
                                order.orderStatus === 'shipped' ? 'bg-indigo-100 text-indigo-800' : 
                                order.orderStatus === 'delivered' ? 'bg-green-100 text-green-800' : 
                                'bg-red-100 text-red-800'
                            %>">
                                <%= order.orderStatus.toUpperCase() %>
                            </div>
                        </div>
                    </div>

                    <div>
                        <h3 class="text-xl font-semibold mb-4">Payment Status</h3>
                        <div class="bg-gray-50 p-6 rounded-lg">
                            <div class="inline-block px-4 py-2 rounded-full <%= 
                                order.paymentStatus === 'pending' ? 'bg-yellow-100 text-yellow-800' : 
                                order.paymentStatus === 'completed' ? 'bg-green-100 text-green-800' : 
                                order.paymentStatus === 'failed' ? 'bg-red-100 text-red-800' : 
                                'bg-gray-100 text-gray-800'
                            %>">
                            
                                <%= order.paymentStatus.toUpperCase() %>
                            </div>
                            <!-- <% if (order.paymentError) { %>
                                <p class="mt-2 text-red-600">
                                    Error: <%= order.paymentError %>
                                </p>
                            <% } %> -->
                            <br>
                            <% if (order.paymentStatus === 'failed') { %>
                                <button class="px-6 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors mt-4 a"
                                        onclick="initiateRepayment('<%= order._id %>')">
                                    Repay
                                </button>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Footer Actions -->
            <div class="px-6 py-4 bg-gray-50 border-t">
                <div class="flex flex-col sm:flex-row justify-between items-center gap-4">
                    <div class="space-x-4">
                        <% if (order.orderStatus === 'pending') { %>
                            <button onclick="cancelOrder('<%= order._id %>')"
                                    class="px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors">
                                Cancel Order
                            </button>
                        <% } %>
                        <% if (order.orderStatus === 'delivered') { %>
                            <button onclick="initiateReturn('<%= order._id %>')"
                                    class="px-6 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 transition-colors">
                                Return Order
                            </button>
                        <% } %>
                    </div>
                    <button onclick="downloadInvoice('<%= order._id %>')"
                            class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                        <i class="fas fa-download mr-2"></i>Download Invoice
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
function cancelOrder(orderId) {
    Swal.fire({
        title: 'Cancel Order',
        text: 'Are you sure you want to cancel this order?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc2626',
        cancelButtonColor: '#6b7280',
        confirmButtonText: 'Yes, Cancel Order',
        cancelButtonText: 'No, Keep Order'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/orders/${orderId}/cancel`, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Cancelled!',
                            text: 'Your order has been cancelled.',
                            icon: 'success'
                        }).then(() => location.reload());
                    } else {
                        Swal.fire('Error', data.message, 'error');
                    }
                });
        }
    });
}

function initiateReturn(orderId) {
    Swal.fire({
        title: 'Return Order',
        text: 'Are you sure you want to return this order?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#eab308',
        cancelButtonColor: '#6b7280',
        confirmButtonText: 'Yes, Return Order',
        cancelButtonText: 'No, Keep Order'
    }).then((result) => {
        if (result.isConfirmed) {
            window.location.href = `/orders/${orderId}/return`;
        }
    });
}

function downloadInvoice(orderId) {
    window.location.href = `/orders/${orderId}/invoice`;
}

function initiateRepayment(orderId) {
    fetch('/initiateRepayment', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ orderId })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success && data.razorpay) {
            const options = {
                key: data.razorpay.keyId,
                amount: data.razorpay.amount,
                currency: data.razorpay.currency,
                order_id: data.razorpay.orderId,
                name: 'Your Store Name',
                description: 'Order Repayment',
                handler: function (response) {
                    Swal.fire({
                        title: 'Processing Payment',
                        text: 'Please wait...',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        willOpen: () => Swal.showLoading()
                    });

                    fetch('/verify-payment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            razorpay_payment_id: response.razorpay_payment_id,
                            razorpay_order_id: response.razorpay_order_id,
                            razorpay_signature: response.razorpay_signature,
                            order_id: orderId
                        })
                    })
                    .then(res => res.json())
                    .then(verificationData => {
                        if (verificationData.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Payment Successful!',
                                text: 'Your order has been repaid successfully.',
                                confirmButtonText: 'View Order'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = `/order/${verificationData.orderId}`;
                                }
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Payment Failed',
                                text: verificationData.message || 'Your payment could not be verified.'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Payment error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed',
                            text: 'There was an error processing your payment'
                        });
                    });
                },
                prefill: {
                    name: '<%= order.userId.name %>',
                    email: '<%= order.userId.email %>',
                    contact: '<%= order.userId.phone %>'
                },
                theme: {
                    color: '#3399cc'
                },
                modal: {
                    ondismiss: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed',
                            text: 'Your payment could not be completed. Please try again later.',
                            confirmButtonText: 'OK'
                        });
                    }
                }
            };

            const rzp = new Razorpay(options);
            rzp.open();
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message || 'Unable to initiate repayment'
            });
        }
    })
    .catch(error => {
        console.error('Error initiating repayment:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Unable to initiate repayment'
        });
    });
}
</script>