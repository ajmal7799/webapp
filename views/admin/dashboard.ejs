<%- include("../partials/admin/header") %>

<style>
    .filter-container {
        background: #fff;
        padding: 5px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        width: fit-content;
        margin-left: auto;
        margin-bottom: 15px;
    }

    .select-filter {
        width: auto !important;
        min-width: 120px;
        height: 30px;
        font-size: 14px;
}
</style>

<!-- Tailwind CSS CDN -->
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<!-- Chart.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container mx-auto px-4 py-8 mt-16">
    <div class="filter-container">
        <select class="form-select select-filter" aria-label="Filter by" id="filter-data" onchange="filterData(this.value)">
            <option value="default">Default</option>
            <option value="daily">Daily</option>
            <option value="weekly">Weekly</option>
            <option value="monthly">Monthly</option>
            <option value="yearly">Yearly</option>
        </select>
    </div>
  <!-- Summary Cards -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
    <div class="bg-white p-6 rounded-lg shadow">
        <h3 class="text-gray-500 text-sm font-medium">Total Revenue</h3>
        <p class="text-2xl font-bold" id="total-revenue"> <!-- Add ID here -->
          ₹<%= typeof totalRevenue === 'number' ? totalRevenue.toLocaleString() : "0" %>
        </p>
      </div>
      <div class="bg-white p-6 rounded-lg shadow">
        <h3 class="text-gray-500 text-sm font-medium">Total Sales</h3>
        <p class="text-2xl font-bold" id="total-sales"> <!-- Add ID here -->
          <%= typeof salesData === 'number' ? salesData.toLocaleString() : "0" %>
        </p>
      </div>
    <div class="bg-white p-6 rounded-lg shadow">
      <h3 class="text-gray-500 text-sm font-medium">Cancelled Orders</h3>
      <p class="text-2xl font-bold"><%= typeof cancelledCount !== 'undefined' ? cancelledCount : "0" %></p>
    </div>
    <div class="bg-white p-6 rounded-lg shadow">
      <h3 class="text-gray-500 text-sm font-medium">New Users</h3>
      <p class="text-2xl font-bold">
        <%= typeof newUsersCount === 'number' ? newUsersCount.toLocaleString() : "0" %>
      </p>
    </div>
  </div>

  
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
    
    <div class="bg-white p-6 rounded-lg shadow">
      <h3 class="text-lg font-semibold mb-4">Top Products</h3>
      <canvas id="topProductsChart"></canvas>
    </div>

   
    <div class="bg-white p-6 rounded-lg shadow">
      <h3 class="text-lg font-semibold mb-4">Top Categories</h3>
      <canvas id="topCategoriesChart"></canvas>
    </div>
  </div>

  <!-- Additional Charts -->
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
 
    <!-- New Users Chart -->
    <!-- <div class="bg-white p-6 rounded-lg shadow">
      <h3 class="text-lg font-semibold mb-4">New Users (Last 4 Days)</h3>
      <canvas id="newUsersChart"></canvas>
    </div> -->
  </div>
</div>


<script>
  // Top Products Chart
  const topProductsCtx = document.getElementById('topProductsChart').getContext('2d');
  const topProductsChart = new Chart(topProductsCtx, {
    type: 'bar',
    data: {
      labels: '<%= productData.map(p => p.productName) %>',
      datasets: [{
        label: 'Orders',
        data: '<%= JSON.stringify(productData.map(p => p.totalOrder)) %>',
        backgroundColor: 'rgba(59, 130, 246, 0.5)',
        borderColor: 'rgba(59, 130, 246, 1)',
        borderWidth: 1
      }]
    },
    options: {
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });

  // Top Categories Chart
  const topCategoriesCtx = document.getElementById('topCategoriesChart').getContext('2d');
  const topCategoriesChart = new Chart(topCategoriesCtx, {
    type: 'bar',
    data: {
      labels: '<%= categoryData.map(c => c.categoryName) %>',
      datasets: [{
        label: 'Orders',
        data: '<%= JSON.stringify(categoryData.map(c => c.totalOrder)) %>',
        backgroundColor: [
          'rgba(255, 99, 132, 0.5)',
          'rgba(54, 162, 235, 0.5)',
          'rgba(255, 206, 86, 0.5)',
          'rgba(75, 192, 192, 0.5)'
        ],
        borderColor: [
          'rgba(255, 99, 132, 1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)'
        ],
        borderWidth: 1
      }]
    }
  });

  async function filterData(filterValue) {
    try {
        const response = await fetch(`http://localhost:3000/admin/filter?filter=${filterValue}`);
        const data = await response.json();

        // Update summary cards
        document.getElementById('total-revenue').textContent = 
            '₹' + data.totalRevenue.toLocaleString('en-IN');
        document.getElementById('total-sales').textContent = 
            data.salesData.toLocaleString('en-IN');
        document.getElementById('cancelled-orders').textContent = 
            data.cancelledCount.toLocaleString('en-IN');
        document.getElementById('new-users').textContent = 
            data.newUsersCount.toLocaleString('en-IN');

        // Update charts
        topProductsChart.data.labels = data.productData.map(p => p.productName);
        topProductsChart.data.datasets[0].data = data.productData.map(p => p.totalOrder);
        topProductsChart.update();

        // Repeat for other charts
    } catch (error) {
        console.error('Filter error:', error);
    }
}

function updateChart(chart, labels, data) {
    if (chart) {
        chart.data.labels = labels;
        chart.data.datasets[0].data = data;
        chart.update();
    }
}


</script>

<%- include("../partials/admin/footer") %>