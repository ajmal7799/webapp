<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
    <style>
        .preview-container {
            max-width: 200px;
            max-height: 200px;
            overflow: hidden;
            margin: 10px;
        }
        .cropper-container {
            width: 100%;
            max-height: 500px;
        }
        .existing-image {
            max-width: 200px;
            margin: 10px 0;
        }
    </style>
</head>
<body>
    <div class="container mt-5 mb-5">
        <h2 class="mb-4">Edit Product</h2>

        <form id="productForm" action="/admin/editProduct/<%= product._id %>" method="POST" enctype="multipart/form-data"
            class="needs-validation" novalidate>
            
            <!-- Product Basic Info -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="productName" class="form-label">Product Name*</label>
                    <input type="text" class="form-control" id="productName" name="productName" 
                           value="<%= product.name %>" required>
                    <div class="invalid-feedback">Please enter product name</div>
                </div>
                <div class="col-md-6">
                    <label for="writer" class="form-label">Writer*</label>
                    <input type="text" class="form-control" id="writer" name="writer" 
                           value="<%= product.writer %>" required>
                    <div class="invalid-feedback">Please enter writer name</div>
                </div>
            </div>

            <!-- Published Date and Language -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="publishedDate" class="form-label">Published Date*</label>
                    <input type="date" class="form-control" id="publishedDate" name="publishedDate" 
                           value="<%= product.publishedDate.toISOString().split('T')[0] %>" required>
                    <div class="invalid-feedback">Please select published date</div>
                </div>
                <div class="col-md-6">
                    <label for="language" class="form-label">Language*</label>
                    <select class="form-select" id="language" name="language" required>
                        <option value="">Select Language</option>
                        <% ['English', 'Malayalam', 'Hindi', 'Tamil'].forEach(lang => { %>
                            <option value="<%= lang %>" <%= product.language === lang ? 'selected' : '' %>>
                                <%= lang %>
                            </option>
                        <% }); %>
                    </select>
                    <div class="invalid-feedback">Please select language</div>
                </div>
            </div>

            <!-- Description -->
            <div class="mb-3">
                <label for="description" class="form-label">Description*</label>
                <textarea class="form-control" id="description" name="description" 
                          rows="4" required><%= product.description %></textarea>
                <div class="invalid-feedback">Please enter description</div>
            </div>

            <!-- Pricing -->
            <div class="row mb-3">
                <div class="col-md-4">
                    <label for="regularPrice" class="form-label">Regular Price (â‚¹)*</label>
                    <input type="number" class="form-control" id="regularPrice" name="regularPrice" 
                           value="<%= product.regularPrice%>" min="0" step="0.01" required>
                    <div class="invalid-feedback">Please enter regular price</div>
                </div>
                <div class="col-md-4">
                    <label for="salePrice" class="form-label">Sale Price*</label>
                    <input type="number" class="form-control" id="salePrice" name="salePrice" 
                           value="<%= product.salePrice %>" min="0" step="0.01" required>
                </div>
                <div class="col-md-4">
                    <label for="quantity" class="form-label">Quantity*</label>
                    <input type="number" class="form-control" id="quantity" name="availableQuantity" 
                           value="<%= product.availableQuantity %>" min="0" required>
                    <div class="invalid-feedback">Please enter quantity</div>
                </div>
            </div>

            <!-- Category -->
            <div class="mb-3">
                <label for="category" class="form-label">Category<span class="text-danger">*</span></label>
                <select class="form-select" id="category" name="category_id" required>
                    <option value="">Select Category</option>
                    <% categories.forEach(category => { %>
                        <option value="<%= category._id %>"
                                <%= product.category_id && 
                                    product.category_id.toString() === category._id.toString() 
                                    ? 'selected' 
                                    : '' %>>
                            <%= category.name %>
                        </option>
                    <% }); %>
                </select>
                <div class="invalid-feedback">
                    Please select a category
                </div>
            </div>

            <!-- Image Upload -->
            <div class="mb-3">
                <label class="form-label">Product Images</label>
                <div id="imageUploadContainer">
                    <!-- Add debug output to see what data we're getting -->
                    <% console.log('Product data:', product) %>
                    
                    <% if (product && product.productImages) { %>
                        <% console.log('Product images:', product.productImages) %>
                        
                        <% for (let i = 0; i < 3; i++) { %>
                            <div class="image-upload-container" id="upload<%= i + 1 %>">
                                <% if (product.productImages[i]) { %>
                                    <!-- Log each image path -->
                                    <% console.log(`Image ${i + 1} path:`, product.productImages[i]) %>
                                    
                                    <div class="existing-image">
                                        <img src="<%= product.productImages[i] %>" 
                                             class="img-fluid" 
                                             alt="Current Image <%= i + 1 %>"
                                             onerror="this.onerror=null; console.log('Failed to load image:', this.src);">
                                    </div>
                                <% } %>
                                <input type="file" class="form-control mb-2" 
                                       name="imageInput<%= i+1 %>" accept="image/*">
                                <div class="image-preview" id="preview<%= i+1 %>"></div>
                                <button type="button" class="btn btn-primary crop-button" 
                                        data-index="<%= i+1 %>">Crop Image</button>
                            </div>
                        <% } %>
                    <% } else { %>
                        <p>No images found for this product.</p>
                    <% } %>
                </div>
            </div>
            
            <!-- Cropper Modal -->
            <div class="modal fade" id="cropperModal" tabindex="-1">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Crop Image</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <div class="cropper-container">
                                <img id="cropperImage" src="" alt="Image to crop">
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" 
                                    data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" 
                                    id="cropButton">Crop & Save</button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Hidden inputs for cropped images -->
            <div id="croppedImagesContainer">
                <input type="hidden" name="croppedImage1" id="croppedImage1">
                <input type="hidden" name="croppedImage2" id="croppedImage2">
                <input type="hidden" name="croppedImage3" id="croppedImage3">
            </div>
            
            <!-- Submit Button -->
            <div class="mt-4">
                <button type="submit" class="btn btn-primary">Update Product</button>
                <a href="/admin/products" class="btn btn-secondary ms-2">Cancel</a>
            </div>
        </form>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
    <script>
        let cropper = null;
        let currentImageIndex = null;
        const croppedImages = {
            1: null,
            2: null,
            3: null
        };

        // Handle file inputs
        document.querySelectorAll('input[type="file"]').forEach(input => {
            input.addEventListener('change', function(e) {
                const index = this.name.replace('imageInput', '');
                if (this.files && this.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const preview = document.getElementById(`preview${index}`);
                        preview.innerHTML = `<img src="${e.target.result}" class="img-fluid" alt="Preview">`;
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });
        });

        // Handle crop buttons
        document.querySelectorAll('.crop-button').forEach(button => {
            button.addEventListener('click', function() {
                const index = this.dataset.index;
                const input = document.querySelector(`input[name="imageInput${index}"]`);
                
                if (input.files && input.files[0]) {
                    currentImageIndex = index;
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        showCropper(e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            });
        });

        function showCropper(imageSrc) {
                const cropperModal = new bootstrap.Modal(document.getElementById('cropperModal'));
                const cropperImage = document.getElementById('cropperImage');
    
                cropperImage.src = imageSrc;
                if (cropper) {
                    cropper.destroy();
                }
    
                cropperModal.show();
                cropper = new Cropper(cropperImage, {
                    aspectRatio: 1,
                    viewMode: 2,
                    autoCropArea: 1,
                });
    
                document.getElementById('cropButton').onclick = function() {
                    const croppedCanvas = cropper.getCroppedCanvas({
                        width: 400,
                        height: 400
                    });
    
                    const croppedImage = croppedCanvas.toDataURL('image/jpeg');
                    croppedImages[currentImageIndex] = croppedImage;
    
                    // Update preview
                    const preview = document.getElementById(`preview${currentImageIndex}`);
                    preview.innerHTML = `<img src="${croppedImage}" class="img-fluid" alt="Cropped Preview">`;
    
                    // Update hidden input
                    let hiddenInput = document.querySelector(`input[name="croppedImage${currentImageIndex}"]`);
                    if (!hiddenInput) {
                        hiddenInput = document.createElement('input');
                        hiddenInput.type = 'hidden';
                        hiddenInput.name = `croppedImage${currentImageIndex}`;
                        document.getElementById('croppedImagesContainer').appendChild(hiddenInput);
                    }
                    hiddenInput.value = croppedImage;
    
                    cropperModal.hide();
                };
            }
    
            // Form validation
            (() => {
                'use strict'
                const form = document.querySelector('.needs-validation')
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })()
        </script>
    </body>

    </html>